phpinfo      输出php相关配置信息
echo         向浏览器中输出信息
var_dump()   输出信息（精确调试时使用）
header       php声明编码方式（告诉浏览器，你用什么编码对我的文件进行解析）("content-type:text/html;charset=utf-8");

变量
写法:$+变量名称
大小写敏感：$one与$ONE是不同的变量

变量类型:（数据类型）
int整型：           整数1234
string字符串类型：  英文和特殊字符hello，php
float浮点型：       小数 10.08，9.3
bool布尔型：        真值和假值（两者对比的结果或程序执行完成后返回的值）
真值：除了了假值都是真值
假值：0，NULL,"",false（四种）
TRUE是
FALSE否
关于强制转换：（int）（string）（bool）(float)
举例：
$aa="123.8hello";   var_dump((int)$aa);
$bb="123.8hello";   var_dump((float)$bb);
$cc="";             var_dump((bool)$cc);
$dd="100"           var_dump((string)$dd);
注意：echo向浏览器输出（直接输出）
var_dump()向浏览器输出（不仅输出数值，而且还打印变量类型）
注意：
编码方式：utf-8国际编码 一个中文是3个字符；gb2312/gbk  中文编码方式  一个中文2个字符

常量

定义：不能改变的量
命名：数字，字母，下划线（大多情况是大写）
分类：系统常量和自定义常量：
系统常量：不需要声明，系统直接为我们封装好的，直接可以使用
_LINE_:表示文件中的当前行号
_FILE_:表示当前文件的路径
自定义常量：define("名称"，"数值")；//定义
define("URL","htpp://www.baidu.com");//第二参数将赋值给第一个参数，URL就是我们定义的常量

php时间格式
获取系统时间:       date("Y-m-d H:i:s");
获取当前时间戳：    time();
时间戳：            格林威治时间1970年1月1日00：00：00开始计算，直到现在这一刻的秒数（int）
声明时区：          date default_timezone_set("PRC");
时间戳=>具体时间:   date ("Y-m-d H:i:s",$chuo);
具体时间=>时间戳：  strtotime{"1999-09-03 22:22:22");
一天的开始：        strtotime(date("Y-m-d")."00:00:00")
一天的结束：        strtotime（date("Y-m-d"）."23:59:59")
时间戳的最大值      $time = "2038-01-19 11:14:07";



php运算符：（五种）
算数运算符：+ - * / %    ++依次递增1   --依次递减1

$a++   先输出$a的值，然后在这个值的基础上+1
++$a   先+1，再输出+1后的值

字符串运算符：（拼接符）
echo "有个人叫".$name.",今年".$age.",身高挺矮的，刚".$height."!还是个".$sex."的！现在的时间是".date("H:i:s")."<br>";
echp $name.$age.$height.$sex;

赋值运算符：= += -= *= /= %= .=
举例
$a = 10;
$b = 10;
$b+=$a;   //$b=$b+$a
echo $b

举例
$a = "hello"
$b = "php"
$a.=$b;
echo $a;
举例
$a = $b = $c = $d = $e = 10;
$a+=10;
$b-=10;
$c*=10;
$d/=10;
$e%=10;
$res = "结果是：<br>;
$res.="a值自相加10后等于".$a."<br>";
$res.="b值自相减10后等于".$b."<br>";
$res.="c值自相乘10后等于".$b."<br>";
$res.="d值自相除10后等于".$d."<br>";
$res.="e值自与10取于等于".$e."<br>";
echo $res;
比较运算符：> < >= <=   == 只判断数值是否相等 ===即判断数值又判断数据类型是否一致 !=只判断数值是否相等(也是不等于)

$a = 10;
$b = 20;
$c = "10";
var dump($a>$b);
var dump($a<$b);
var dump($a>=$b);
var dump($a<=$b);
var dump($a==$c);
var dump($a===$c);
var dump($a!=$c);

逻辑运算符：
与and && 代表并且关系
或or ||  代表或者关系（只要有一个结果为真，则返回真）
非not !  代表取反关系（true=>false false=>true）
举例
var_dump($a>$b && $a<$b);
var_dump(!($a==$c || !($a<$b)));


rand(数值,数值) 随即取一个值
ceil() 函数向上舍入为最接近的整数。
exit() 函数输出一条消息，并退出当前脚本。

三元运算符? :
(expr1)?(expr2):(expr3)，如果expr1的值为true，则此表达式的值为expr2，否则为expr3。

流程控制 if如果(表示判断) else否则

if(表达式){程序体}                                         表达式为真，执行程序体，为假什么也不执行

if(表达式){程序体1}else{程序体2}                           表达式为真执行程序体1，否则执行程序体2

if(表达式1){程序体1}elseif(表达式2){程序体2}else{程序体3}  表达式为真执行程序体1，否则判断表达式2，如果表达式2为真，执行程序体2，如果表达式1和2都不成立那么执行3


switch语句  case后输入值  break打断输出   defaul 默认值(可以不写)
switch(判断体){case "值1":echo (处理过程（程序体）)；break(打断输出);。。。。。default（默认值）:echo (处理过程（程序体）); }


php中的三种循环：while/do..while/for

while循环
while(条件){程序体};

do..while循环
do{程序体}while(条件)   无论条件是否成立，都先执行一遍程序体，然后在判断条件是否成立。


for循环
for(初始化;条件表达式;增量)｛程序体;｝

<pre></pre> 格式化打印（主要用于测试）
print_r     打印数组 （常用）



数组
srray();  定义一个数组































